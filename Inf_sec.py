 ## -*- coding: windows-1251 -*-

alphabet = ['└р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  ',
            'р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └',
            '┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р',
            'с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴',
            '┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с',
            'т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬',
            '├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т',
            'у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├',
            '─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у',
            'ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─',
            '┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф',
            'хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼',
            'и╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼х',
            '╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи',
            '╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕',
            'ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞',
            '╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц',
            'ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟',
            '╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч',
            'ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚',
            '╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш',
            'щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔',
            '╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ',
            'ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩',
            '╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ',
            'ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦',
            '╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы',
            'ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠',
            '═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь',
            'э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═',
            '╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э',
            'ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬',
            '╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю',
            'я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧',
            '╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я',
            'Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨',
            '╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё',
            'ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤',
            '╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё',
            'Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥',
            '╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є',
            'є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙',
            '╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є',
            'Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘',
            '╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї',
            'ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒',
            '╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї',
            'Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓',
            '╫ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў',
            'ў╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫',
            '╪°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў',
            '°┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪',
            '┘∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°',
            '∙┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘',
            '┌·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙',
            '·█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌',
            '█√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·',
            '√▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█',
            '▄№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√',
            '№▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄',
            '▌¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№',
            '¤▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌',
            '▐■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤',
            '■▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐',
            '▀  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■',
            '  └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀',
            ' └р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╒ї╓Ў╫ў╪°┘∙┌·█√▄№▌¤▐■▀ ']

text = input ("╥хъёЄ фы  °шЇЁютрэш : ")
k = input("┬тхфшЄх ъы■ў °шЇЁютрэш : ")

result = ""
msg = ""

def encoder(text, key):
    result = ""
    i = 0
    j = 0
    flag = 0
    for symb in text:
        if symb in alphabet[0]:
            if(j == len(key)):
                j = 0
            while i < 66:
                
                if(alphabet[i][0] == key[j]):
                    flag = i
                    break
                i = i+1
            position = alphabet[0].find(symb)
            result +=alphabet[flag][position]
            j = j+1
            i = 0

        else:
            result += symb

    print("╟р°шЇЁютрээ√щ ЄхъёЄ:", result)
    return result
    
def decoder(text, key):
    begin_msg = ""
    i = 0
    j = 0
    flag = 0
    for symb in text:
        if symb in alphabet[0]:
            if(j == len(key)):
                j = 0
            while i < 66:
                
                if(alphabet[i][0] == key[j]):
                    flag = i
                    break
                i = i+1
            position = alphabet[flag].find(symb)
            begin_msg +=alphabet[0][position]
            j = j+1
            i = 0

        else:
            begin_msg += symb

    print("╨рё°шЇЁютрээ√щ ЄхъёЄ:", begin_msg)




    return begin_msg

result = encoder(text, k)
msg = decoder(result, k)